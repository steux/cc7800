v0.2.28 (05/05/2025) :
    - FIXME: Data was discarded by DASM when no code preceded it in the same bank
    - Added different outputs wrt verbosity level

v0.2.27 (12/13/2024) :
    - Bug fix in sprites grouping

v0.2.26 (05/20/2024) :
    - Added SHORT_INTERRUPT feature
    - Added 256Kb ROM support (SuperGame256)
    - Added EXFIX bankswitching scheme support
    - Implemented gfx grouping based on prefix
    - Bug fix in const unsigned int arrays generation

v0.2.25 (04/12/2024) :
    - Added noholeydma keyword supprt 
    - Corrected a bug with included assembler (oops)

v0.2.24 (03/26/2024) :
    - Added support for height 12 scattered memory

v0.2.23 (03/12/2024) :
    - Added paddles support in header
    - Enhanced memory mapping

v0.2.22 (02/12/2024) :
    - Bug corrected in constant adresses in array of pointers
    - Bug corrected wrt sign region size

v0.2.21 (01/17/2024) :
    - Added support for 8KB, 16KB, 32KB and 48KB ROMs  
    - Added support for 52KB ROMs
    - Moved startup code to the end of the first bank (just before interrupt vectors)
    - Reserved ROM for cart encryption signature
    - Always hash the last 4KB
     
v0.2.20 (01/08/2024) :
    - Added support for constant address in array of pointers
     
v0.2.19 (12/22/2023) :
    - Moved to cc6502 v1.0.14

v0.2.18 (12/04/2023) :
    - Moved to cc6502 v1.0.13
    - Added support for correct state save on interrupt
    - Added error on zeropage variables overflow

v0.2.17 (11/08/2023) :
    - Moved to cc6502 v1.0.12
    - Enhanced function level computation (too slow when recursion is found)
    - Corrected zeropage variable usage count

v0.2.16 (10/26/2023) :
    - Moved to cc6502 v1.0.10

v0.2.15 (10/09/2023) :
    - Moved to cc6502 v1.0.9

v0.2.14 (10/02/2023) :
    - Bug corrected: current_bank is set correctly (bankswitching)
    - Added generation of asm in banked rom
    - Added interrupt tree call local variables declaration 
    - Added memory full message

v0.2.13 (09/17/2023) :
    - Better supergame detection (no need to have function code in banks)

v0.2.12 (09/04/2023) :
    - Added small and big sprites in multisprite.h
    - Added example_small_sprites and example_explosions
    - Moved to cc6502 v1.0.3

v0.2.11 (08/28/2023) :
    - Corrected some bugs in conio.h
    - Added holeydmacost.c example
    - Added DMA Masking vertical scrolling support

v0.2.10 (07/17/2023) :
    - Added information on zeropage memory usage
    - Better local variables memory mapping in order to avoid copies and stacking (for cc6502 v0.9.1)

v0.2.9 (07/02/2023) :
    - Moved to cc6502 v0.9

v0.2.8 (06/27/2023) :
    - Moved Pokey location to 0x4000 to make it work on real hardware

v0.2.7 (06/19/2023) :
    - Added sfx and RMTracker (Pokey music) examples

v0.2.6 (06/12/2023) :
    - Added MS_BIDIR_VERTICAL_SCROLLING and MS_HORIZONTAL_SCROLLING support
    - Added examples/exmaples_tiles.c
    - Added headers/joystick.h for joystick support
    
v0.2.5 (06/04/2023) :
    - Added memcpy function in string.h
    - multisprite.h v0.2 : Added _MS_TOP_SCROLLING_ZONE define option (for part screen scrolling only)
    - Added examples/example_score.c that displays a rolling 16-bits (5 digits) score on top
    - Added strlen function in string.h
    - Way better link algorithm by actually computing call graph (with cc6502 v0.7)

v0.2.4 (05/28/2023) :
    - Link only functions actually used (with cc6502 v0.6)
    - Added implementation of itoa in stdlib.h header
    - Removed usage of the 64 available RAM bytes between zeropage and stack shadow memory (apparently mapped)
    - Added support for NMI interrupts

v0.2.3 (05/22/2023) :
    - Added ramchip memory usage information
    - Now uses the 64 available RAM bytes between zeropage and stack shadow memory 

v0.2.2 (05/15/2023) :
    - Added RAM left information (with verbose option)
    - Slightly modified DASM error output
    - Corrected bug for cart info location for supergames
    - Added verbose output for memory mapping
    - Modified generated header so that we can compile without prosystem.h
    - Corrected bug with scattered data layout
    
v0.2.1 (05/01/2023) :
    - Added generation of debug files (.lst, .sym) 

v0.2.0 (04/24/2023) :
    - Added a78 header and runs DAMS automatically now
    - Added _ms_paldetected & multisprite_get_tv to produce code independant of PAL and NTSC
    - moved all the code to 224 lines for PAL and NTSC

v0.1.2 (04/17/2023) :
    - Added multisprite example (examples/example_multisprite.c)
    - Added multisprite support through multisprite.h header

v0.1.1 :
    - Enhanced Holey DMA management
    - Added bankswitching and RAM on cart support
    - Corrected memory mapping

v0.1.0 (4/4/2023) :
    - First release
